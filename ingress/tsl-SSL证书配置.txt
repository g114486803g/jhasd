[root@docker200 ingress-nginx]# openssl genrsa -out tls.key 2048
Generating RSA private key, 2048 bit long modulus
.........+++
...............+++
e is 65537 (0x10001)
[root@docker200 ingress-nginx]# openssl req -new -x509 -key tls.key -out tls.crt -subj /C=CN/ST=Shanghai/L=Shanghai/O=DevOps/CN=tomcat.jb.com -days 10
[root@docker200 ingress-nginx]# 



[root@docker200 ingress-nginx]# openssl x509 -in tls.crt -text -noout
Certificate:
    Data:
        Version: 3 (0x2)
        Serial Number:
            a2:23:8c:81:05:1d:5b:3c
    Signature Algorithm: sha256WithRSAEncryption
        Issuer: C=CN, ST=Shanghai, L=Shanghai, O=DevOps, CN=tomcat.jb.com
        Validity
            Not Before: Aug 15 01:30:35 2019 GMT
            Not After : Aug 25 01:30:35 2019 GMT
        Subject: C=CN, ST=Shanghai, L=Shanghai, O=DevOps, CN=tomcat.jb.com
        Subject Public Key Info:
            Public Key Algorithm: rsaEncryption
                Public-Key: (2048 bit)
                Modulus:
                    00:be:37:98:2c:7a:4f:23:b9:49:eb:a3:ba:c2:f3:
                    25:3c:9e:ed:61:ee:4f:c3:b5:5a:ea:38:dd:91:97:
                    66:6b:30:31:78:43:c7:64:a3:f7:aa:3d:5c:10:7f:
                    dd:f8:fc:5b:ac:eb:6c:db:68:5b:8d:5d:9c:1c:ac:
                    0d:e7:aa:7d:66:91:59:ef:99:df:2f:cb:ed:14:a2:
                    e2:64:d0:b4:52:4e:48:15:84:55:f8:38:81:f1:a8:
                    ab:85:4a:d7:53:73:cb:cd:e9:2d:53:dd:98:63:17:
                    5a:1b:c9:64:41:70:5a:e3:3c:87:0e:08:94:e0:41:
                    bb:8b:8f:79:9b:d1:c6:84:6b:01:8f:30:e4:01:99:
                    1d:40:90:9e:6e:39:11:f4:f0:c6:9b:a5:9d:1d:cc:
                    0f:9a:6d:81:85:35:2a:4d:1a:c2:11:c6:b8:ff:56:
                    a8:d0:1d:f1:07:8a:a5:dd:44:96:c2:29:c0:39:2f:
                    f1:6b:86:d7:12:df:9f:3e:1c:b8:35:17:f9:5d:6a:
                    61:71:c3:71:c5:33:88:c8:ff:e9:b2:90:16:1b:28:
                    39:65:ba:2a:47:38:eb:69:13:ff:57:94:7b:33:91:
                    fe:96:bc:e6:56:7b:b4:ab:65:c3:40:af:90:db:65:
                    94:28:b3:a6:40:08:04:01:27:3a:15:4e:f1:05:cd:
                    21:bd
                Exponent: 65537 (0x10001)
        X509v3 extensions:
            X509v3 Subject Key Identifier: 
                B4:62:6D:32:4B:0F:80:08:E5:9A:50:53:AC:0C:82:15:EF:44:99:55
            X509v3 Authority Key Identifier: 
                keyid:B4:62:6D:32:4B:0F:80:08:E5:9A:50:53:AC:0C:82:15:EF:44:99:55

            X509v3 Basic Constraints: 
                CA:TRUE
    Signature Algorithm: sha256WithRSAEncryption
         4e:e0:2d:38:82:21:d8:c1:3d:2b:b9:d3:45:77:e2:c0:9b:80:
         79:08:e6:78:01:42:0a:01:93:25:31:e5:a6:2b:56:01:6b:8d:
         38:1c:fc:a7:db:a1:eb:48:d9:db:aa:11:94:92:70:43:04:bc:
         3f:10:05:c4:a7:16:a0:8f:ea:15:7e:f2:c4:dc:53:98:b6:f0:
         86:b6:9c:60:47:14:65:9d:1d:b3:7a:00:cf:d3:33:9a:15:b5:
         33:d8:65:e9:c5:84:0a:be:bc:a0:7a:03:59:d9:38:f4:af:a7:
         f6:dc:8b:b3:bc:1b:a1:42:b6:c8:b7:d2:0d:36:4d:72:27:78:
         df:1b:95:e2:18:4b:33:7e:6f:c0:5e:af:87:b4:04:a7:72:22:
         02:22:ac:38:61:44:51:fc:fe:1a:6c:a8:fa:27:78:c8:46:79:
         4c:53:0b:da:c4:76:aa:ea:c5:65:37:76:6a:8a:ff:cf:19:f0:
         97:8d:89:b2:ee:c0:1a:54:94:ce:cf:c1:3b:43:d7:b6:ea:7e:
         8d:b4:b5:39:4d:d3:48:b4:66:5d:69:b7:5c:cf:ab:34:55:e2:
         1b:c7:6c:bb:99:47:72:80:29:9a:99:b9:2a:c4:cf:0c:48:4c:
         cd:41:40:6e:7e:e5:af:40:33:51:11:59:51:62:20:eb:b6:d3:
         6b:46:93:46

tomcat-ingress-secret-jsj　这个名字可以任意取
[root@docker200 ingress-nginx]# kubectl create secret tls tomcat-ingress-secret-jsj --cert=tls.crt --key=tls.key
secret/tomcat-ingress-secret-jsj created

[root@docker200 ingress-nginx]# kubectl get secrets 
NAME                        TYPE                                  DATA   AGE
default-token-cl2jw         kubernetes.io/service-account-token   3      26d
tomcat-ingress-secret-jsj   kubernetes.io/tls                     2      12s



查看
[root@docker200 ingress-nginx]# kubectl describe secrets tomcat-ingress-secret-jsj 
Name:         tomcat-ingress-secret-jsj
Namespace:    default
Labels:       <none>
Annotations:  <none>

Type:  kubernetes.io/tls

Data
====
tls.crt:  1289 bytes
tls.key:  1675 bytes



指定主机生效
[root@docker200 ingress-nginx]# kubectl apply -f ingress-app-ssl.yaml
ingress.extensions/ingress-myapp-ssl created


以生效
[root@docker200 ingress-nginx]# kubectl get ingresses.
NAME                HOSTS           ADDRESS   PORTS     AGE
ingress-myapp       tomcat.jb.com             80        16h
ingress-myapp-ssl   tomcat.jb.com             80, 443   82s



得到以下信息配置ＳＳL证书完成
[root@docker200 ingress-nginx]# kubectl describe ingress ingress-myapp-ssl 
Name:             ingress-myapp-ssl
Namespace:        default
Address:          
Default backend:  default-http-backend:80 (<none>)
TLS:
  tomcat-ingress-secret-jsj terminates tomcat.jb.com
Rules:
  Host           Path  Backends
  ----           ----  --------
  tomcat.jb.com  
                    tomcat:80 (10.244.1.12:80,10.244.1.13:80,10.244.1.14:80)
Annotations:
  kubectl.kubernetes.io/last-applied-configuration:  {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{"kubernetes.io/infress.class":"nginx"},"name":"ingress-myapp-ssl","namespace":"default"},"spec":{"rules":[{"host":"tomcat.jb.com","http":{"paths":[{"backend":{"serviceName":"tomcat","servicePort":80},"path":null}]}}],"tls":[{"hosts":["tomcat.jb.com"],"secretName":"tomcat-ingress-secret-jsj"}]}}

  kubernetes.io/infress.class:  nginx
Events:
  Type    Reason  Age   From                      Message
  ----    ------  ----  ----                      -------
  Normal  CREATE  107s  nginx-ingress-controller  Ingress default/ingress-myapp-ssl


连入主机
[root@docker200 ingress-nginx]# kubectl exec -n ingress-nginx -ti nginx-ingress-controller-7995bd9c47-kvjbv -- /bin/sh
$ ls

配置以生效
cat nginx.conf

	server {
		server_name tomcat.jb.com ;
		
		listen 80;
		
		set $proxy_upstream_name "-";
		set $pass_access_scheme $scheme;
		set $pass_server_port $server_port;
		set $best_http_host $http_host;
		set $pass_port $pass_server_port;
		
		listen 443  ssl http2;
		
		# PEM sha: 9d95339e497b7a8f2d18b8398e0af9a9c219f9f9
		ssl_certificate                         /etc/ingress-controller/ssl/default-fake-certificate.pem;
		ssl_certificate_key                     /etc/ingress-controller/ssl/default-fake-certificate.pem;


查看４４３端口
[root@docker200 ingress-nginx]# kubectl get svc -n ingress-nginx 
NAME            TYPE       CLUSTER-IP       EXTERNAL-IP   PORT(S)                      AGE
ingress-nginx   NodePort   10.101.143.236   <none>        80:30000/TCP,443:30791/TCP   16h
