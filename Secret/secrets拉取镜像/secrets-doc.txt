kubectl create secret docker-registry xxxregsecret \
--docker-server=registry.cn-shenzhen.aliyuncs.com \
--docker-username=my-jsj \
--docker-password=123456 \
--docker-email=134@qq.com

kubectl create secret docker-registry {secret名字} --docker-server={仓库地址} --docker-username={你的账号} --docker-password={你的密码} --docker-email {你的邮箱} -n {命名空间}

apiVersion: v1
kind: Pod
metadata:
  name: foo-test
spec:
  containers:
    - name: foo
      image: registry.cn-shenzhen.aliyuncs.com/jbjb/demon:gitea
  imagePullSecrets:
    - name: xxxregsecret


https://kubernetes.io/zh/docs/concepts/configuration/secret/
-------------------------------------------------------------------------------------------
docker login
出现提示时，输入您的Docker用户名和密码
登录过程将创建或更新config.json包含授权令牌的文件
查看config.json文件：
cat ~/.docker/config.json
输出包含类似于以下内容的部分：

{
    "auths": {
        "https://index.docker.io/v1/": {
            "auth": "c3R...zE2"
        }
    }
}

----------------
列如这样
docker login [domain.com:5000]       #登录你的私有仓库
cat ~/.docker/config.json | base64    # 登录成功后打印base64加密后的登录秘钥

ewoJImF1dGhzIjogewoJCSJyZWdpc3RyeS5jbi1zaGVuemhlbi5hbGl5dW5jcy5jb20iOiB7CgkJ
CSJhdXRoIjogIjVyZXg1Wnl6NWE2ZDViNjM1TCtoNTZlUjVvcUE1cHl2NXB5SjZabVE1WVdzNVkr
NE9tSXhNVFEwT0RZNE1ETkEiCgkJfQoJfSwKCSJIdHRwSGVhZGVycyI6IHsKCQkiVXNlci1BZ2Vu
dCI6ICJEb2NrZXItQ2xpZW50LzE5LjAzLjggKGxpb


创建1.cat my-key.yaml

apiVersion: v1
kind: Secret
metadata:
  name: myregistrykey
data:
  .dockerconfigjson: ewoJImF1dGhzIjogewoJCSJyZWdpc3RyeS5jbi1zaGVuemhlbi5hbG <<---写入解密出来的key
type: kubernetes.io/dockerconfigjson


2.创建 cat my-key-daemon.yaml 
 
 
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-jsj
spec:
  selector:
    matchLabels:
      app: my-jsj
  replicas: 1
  template:
    metadata:
      labels:
        app: my-jsj
    spec:
      containers:
      - name: my-jsj
        image: registry.cn-shenzhen.aliyuncs.com/jbjb/demon:dingding
        ports:
        - containerPort: 80
      imagePullSecrets:    <<<--------
      - name: myregistrykey   <<<-----------

官网参考
https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/#registry-secret-existing-credentials
